/*
 * Corne Keyboard Keymap
 * 
 * Based on the ZMK configuration for the Corne keyboard.
 * Original keymap source: https://github.com/SquaredPotato/zmk-config/blob/master/config/kyria.keymap
 * 
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT

 */
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

// #include <../boards/shields/corne/boards/nice_nano.overlay> //led interno

/ {
    // Use tapdance to handle the double tap of the shift key
        behaviors {

        gqt: global-quick-tap {
            compatible = "zmk,behavior-hold-tap";
            label = "GLOBAL_QUICK_TAP";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <125>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
        };
        //? TAP DANCE ('' and "")
        td0: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_0";
            #binding-cells = <0>;
            tapping-term-ms = <185>;
            bindings = <&kp SQT>, <&kp DQT>;
        };

        //? TAP DANCE (, and <)
        td1: tap_dance_1 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_1";
            #binding-cells = <0>;
            tapping-term-ms = <185>;
            bindings = <&kp COMMA>, <&kp LT>;
        };

        //? TAP DANCE (. and >)
        td2: tap_dance_2 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_2";
            #binding-cells = <0>;
            tapping-term-ms = <185>;
            bindings = <&kp DOT>, <&kp GT>;
        };

        //? TAP DANCE (- and _)
        td4: tap_dance_4 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_4";
            #binding-cells = <0>;
            tapping-term-ms = <185>;
            bindings = <&kp MINUS>, <&kp UNDER>;
        };

        //? TAP DANCE (; and :)
        td5: tap_dance_5 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_5";
            #binding-cells = <0>;
            tapping-term-ms = <185>;
            bindings = <&kp SEMI>, <&kp COLON>;
        };
          
        //? TAP DANCE (\ and |) 
        td6: tap_dance_6 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_6";
            #binding-cells = <0>;
            tapping-term-ms = <185>;
            bindings = <&kp BSLH>, <&kp PIPE>;
        };

        //? TAP DANCE (` and ~)
        td7: tap_dance_7 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_7";
            #binding-cells = <0>;
            tapping-term-ms = <185>;
            bindings = <&kp GRAVE>, <&kp TILDE>;
        };

        //? TAP DANCE (= and +)
        td8: tap_dance_8 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_8";
            #binding-cells = <0>;
            tapping-term-ms = <185>;
            bindings = <&kp EQUAL>, <&kp PLUS>;
        };

        //? TAP DANCE (/ and ?)
        td9: tap_dance_9 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_9";
            #binding-cells = <0>;
            tapping-term-ms = <185>;
            bindings = <&kp SLASH>, <&kp QMARK>;
        };

        //? TAP DANCE ([ and {)
        td10: tap_dance_10 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_10";
            #binding-cells = <0>;
            tapping-term-ms = <185>;
            bindings = <&kp LPAR>, <&kp RPAR>;
        };
    
        //? TAP DANCE (] and })
        td11: tap_dance_11 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_11";
            #binding-cells = <0>;
            tapping-term-ms = <185>;
            bindings = <&kp LEFT_BRACKET>, <&kp RIGHT_BRACKET>;
        };

        //? TAP DANCE ({ and })
        td12: tap_dance_12 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_12";
            #binding-cells = <0>;
            tapping-term-ms = <185>;
            bindings = <&kp LEFT_BRACE>, <&kp RIGHT_BRACE>;
        };

        //? TAP DANCE (Shift and Caps Lock)
        td13: tap_dance_13 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_13";
            #binding-cells = <0>;
            tapping-term-ms = <185>;
            bindings = <&kp LSHFT>, <&kp CLCK>;
        };
        //* Conbinacion de teclas
        // Define custom behavior for Ctrl + Cmd + Q eria bloquear pantalla
        ctrl_cmd_q: ctrl_cmd_q {
            compatible = "zmk,behavior-custom";
            label = "CTRL_CMD_Q";
            #binding-cells = <0>;
            bindings = <&kp LCTRL &kp LGUI &kp Q>;
        };

         // Captura de pantalla
        ctrl_shift_4: ctrl_cmd_p {
            compatible = "zmk,behavior-custom";
            label = "CMD_LSHFT_4";
            #binding-cells = <0>;
            bindings = <&kp LGUI &kp LSHFT &kp N4>;
        };

        // Define custom behavior for Move to app left
        ctrl_left: ctrl_left {
            compatible = "zmk,behavior-custom";
            label = "CTRL_LEFT";
            #binding-cells = <0>;
            bindings = <&kp LCTRL &kp LEFT>;
        };

        // Define custom behavior for Move to app right
        ctrl_right: ctrl_right {
            compatible = "zmk,behavior-custom";
            label = "CTRL_RIGHT";
            #binding-cells = <0>;
            bindings = <&kp LCTRL &kp RIGHT>;
        };

    };


    keymap {
        compatible = "zmk,keymap";

        /* ADD OT
        * Default Layer: Alphanumeric and Symbols
        *
        * ,-----------------------------------------------------.							   ,-----------------------------------------------------.
        * |  RAIS  |   ' "  |   , <  |   . >  |   P    |   Y    |							   |   F    |   G    |   C    |   R    |   L    |  BKSP   |
        * |--------+--------+--------+--------+--------+--------|							   |--------+--------+--------+--------+--------+---------|
        * |  LShift|   A    |   O    |   E    |   U    |   I    |							   |   D    |   H    |   T    |   N    |   S    |   /     |
        * |--------+--------+--------+--------+--------+--------|							   |--------+--------+--------+--------+--------+---------|
        * |  SP_MY |   ;    |   Q    |   J    |   K    |   X    |							   |   B    |   M    |   W    |   V    |   Z    |  Enter  |
        * '--------+--------+--------+--------+--------+--------|							   |--------+--------+--------+--------+--------+---------'
        *                            |   GUI  |  LWR   |  SPC   |                              |   ENT  |   RSE  |   ALT  | 
        *                            '--------+--------+--------'							   '--------+--------+--------'
        */

        default_layer {
            bindings = <
                &kp ESC       &td0         &td1       &td2     &kp P   &kp Y           &kp F &kp G  &kp C     &kp R   &kp L     &kp BSPC
                &kp TAB       &kp A        &kp O      &kp E    &kp U   &kp I           &kp D &kp H  &kp T     &kp N   &kp S     &kp KP_SLASH  
                &td13         &kp SEMI     &kp Q      &kp J    &kp K   &kp X           &kp B &kp M  &kp W     &kp V   &kp Z     &kp RET
                                                &kp LGUI    &mo 1   &kp LCTRL          &kp SPACE      &mo 2   &kp RALT
            >;
        };

        /* ADD OT
        * Lower Layer: Function keys and Navigation
        *
        * ,-----------------------------------------------------.							   ,-----------------------------------------------------.
        * |  TAB   |   1    |   2    |   3    |   4    |   5    |							   |   6    |   7    |   8    |   9    |   0    |  BKSP   |
        * |--------+--------+--------+--------+--------+--------|							   |--------+--------+--------+--------+--------+---------|
        * |  F1    |   F2   |   F3   |   F4   |   F5   |   F6   |							   |        |   UP   |        |        |        |   \     |
        * |--------+--------+--------+--------+--------+--------|							   |--------+--------+--------+--------+--------+---------|
        * |   F7   |   F8   |   F9   |   F10  |   F11  |   F12  |							   |  LEFT  |  DOWN  |  RIGHT |   .    |        |         |
        * '----------------------------------------------+------|							   |-----------------------------------------------------'
        *                             |   GUI  |  LWR   |  SPC  |							   |   ENT  |   RSE  |   ALT  | 
        *                            '--------+--------+--------'							   '--------+--------+--------'
        */

        lower_layer {
            bindings = <
                &kp TAB    &kp N1      &kp N2     &kp N3      &kp N4      &kp N5                 &kp N6        &kp N7       &kp N8       &kp N9        &kp N0 &kp BSPC
                &kp F1     &kp F2      &kp F3     &kp F4      &kp F5      &kp F6                 &trans        &kp UP       &trans       &trans        &trans  &kp QMARK
                &kp F7     &kp F8      &kp F9     &kp F10     &kp F11     &kp F12                &kp LEFT      &kp DOWN     &kp RIGHT    &kp DOT       &trans  &trans
                                                    &kp LGUI     &trans      &kp SPACE         &kp RET       &mo 3       &kp RALT
            >;
        };

        /* ADD OT
        * Raise Layer: Function keys, Special Characters, and Media Controls
        *
        * ,-----------------------------------------------------.							   ,-------------------------------------------------------.
        * |   TAB   |   !    |   @    |   #    |   $    |   %    |							   |   ^    |   &    |   *    |   (    |   )    |  BSPC   |
        * |---------+--------+--------+--------+--------+--------|							   |--------+--------+--------+--------+--------+---------|
        * |  LCTRL  |   `    |        |        |        |        |							   |   -    |   =    |   [    |   ]    |   \    |   `     |
        * |---------+--------+--------+--------+--------+--------|							   |--------+--------+--------+--------+--------+---------|
        * |  LSHFT  |  BT0   |  BT1   |  BT2   |        |        |							   |   _    |   +    |   {    |   }    |   |    |   ~     |
        * '------------------------------------------------------'							   '-------------------------------------------------------'
        *                           |   LGUI   |  SPC   |  RET   |                             |   RALT   |   FUN   |   RSE   |
        *                           '----------+--------+--------'                             '----------+--------+--------'
        */
        raise_layer {
            bindings = <
                &kp  TAB    &kp EXCL      &kp AT        &kp HASH       &kp DLLR      &kp PRCNT           &kp CARET  &kp AMPS    &kp KP_MULTIPLY     &kp LPAR    &kp RPAR    &kp BSPC
                &kp LCTRL   &kp GRAVE     &trans         &trans         &trans       &trans              &kp MINUS  &kp EQUAL   &kp LBKT            &kp RBKT    &kp BSLH    &kp BSLH
                &kp LSHFT   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2    &trans       &trans              &kp UNDER  &kp PLUS    &kp LBRC            &kp RBRC    &kp PIPE    &kp TILDE
                                                         &kp LGUI       &trans        &kp SPACE      &kp RET   &trans    &kp RALT
            >;
        };

 /* ADD OT
 * Adjust Layer: Function keys, RGB Control, and Media Controls
 *
 * ,-----------------------------------------------------.							   ,-----------------------------------------------------.
 * |   ESC   |   '    |   ,    |   .    |  VOL+  |   Y    |							   |   F    |   G    |   C    |   R    |   L    |  BSPC   |
 * |---------+--------+--------+--------+--------+--------|							   |--------+--------+--------+--------+--------+---------|
 * |   TAB   |   A    |   A    | PREV   |  PLAY  |  NEXT  |							   |   D    |   H    |   T    |   N    |   S    |   /     |
 * |---------+--------+--------+--------+--------+--------|							   |--------+--------+--------+--------+--------+---------|
 * |   SHFT  |  RGB   |   S    | REWIND |  VOL-  |  FFWD  |							   |   B    |   M    |   W    |   V    |   Z    |  RET    |
 * '-----------------------------------------------------'							   '-----------------------------------------------------'
 *                              |   LGUI   |  SPC   |  RET   |                              |   RALT   |   FUN   |   RSE   |
 *                              '----------+--------+--------'                              '----------+--------+--------'
 */
         adjust_layer {
                bindings = <
                &ctrl_cmd_q     &kp SQT      &kp COMMA   &ctrl_shift_4  &kp C_VOLUME_UP    &kp Y                         &kp F &kp G  &kp C     &kp R        &kp L      &kp BSPC
                &kp TAB         &kp   A      &ctrl_left  &kp C_PREV     &kp C_PLAY_PAUSE   &kp K_NEXT                    &kp D &kp H  &kp T     &ctrl_right  &kp S      &kp KP_SLASH  
                &mt LSHFT LCAPS &kp   A      &kp S   &kp C_REWIND   &kp C_VOLUME_DOWN  &kp C_FAST_FORWARD                &kp B &kp M  &kp W     &kp V        &kp Z      &kp RET                   	                   
                                                         &kp LGUI       &trans        &kp SPACE                         &kp RET   &trans    &kp RALT
            >;
        };
    };
};

// conbinations of keys